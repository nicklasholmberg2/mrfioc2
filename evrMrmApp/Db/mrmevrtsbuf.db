# Capture event timestamps in Buffer.
#
# SYS, D - Record name componenets
# EVR - EVR object name
# NAME - Capture buffer instance name.  Default (EVR):CPT(CODE)
# CODE - Capture times of this event
# TRIG - Flush buffer when this event is received.  may be 0

# Buffered reception times.
#
# The meaning of elements of the waveform depends on the FLUSH macro.
# Allowed values are:
#
# TimesRelFlush
#   Elements are times in nanoseconds relative to the flushing action (either flush event code, or manual flush).
#   The time of the flushing action is stored as the record timestamp.  Element values are always
#   negative.
#
# TimesRelFirst
#   Elements are times in nanoseconds relative to the time of the first event received after a previous flush.
#   The time of the first event is stored in the record timestamp.  Element values are always positive,
#   and the first element value is always zero.
#
record(waveform, "$(SYS){$(D)}TS-I") {
    field(DTYP, "Obj Prop waveform in")
    field(INP , "@OBJ=$(NAME=$(EVR):CPT$(CODE)), CLASS=EVRMRMTSBuffer, PARENT=$(EVR), PROP=$(FLUSH=TimesRelFlush)")
    field(SCAN, "I/O Intr")
    field(FTVL, "LONG") # int32
    field(NELM, "$(NELM=128)")
    field(TSE , "-2")
}

record(longout, "$(SYS){$(D)}CptEvt-SP") {
    field(DTYP, "Obj Prop uint16")
    field(OUT , "@OBJ=$(NAME=$(EVR):CPT$(CODE)), CLASS=EVRMRMTSBuffer, PARENT=$(EVR), PROP=TimeEvent")
    field(VAL , "$(CODE=0)")
    field(PINI, "YES")
    field(FLNK, "$(SYS){$(D)}CptEvt-RB")
}

record(longin, "$(SYS){$(D)}CptEvt-RB") {
    field(DTYP, "Obj Prop uint16")
    field(INP , "@OBJ=$(NAME=$(EVR):CPT$(CODE)), CLASS=EVRMRMTSBuffer, PARENT=$(EVR), PROP=TimeEvent")
}

record(longout, "$(SYS){$(D)}FlshEvt-SP") {
    field(DTYP, "Obj Prop uint16")
    field(OUT , "@OBJ=$(NAME=$(EVR):CPT$(CODE)), CLASS=EVRMRMTSBuffer, PARENT=$(EVR), PROP=FlushEvent")
    field(VAL , "$(TRIG=0)")
    field(PINI, "YES")
    field(FLNK, "$(SYS){$(D)}FlshEvt-RB")
}

record(longin, "$(SYS){$(D)}FlshEvt-RB") {
    field(DTYP, "Obj Prop uint16")
    field(INP , "@OBJ=$(NAME=$(EVR):CPT$(CODE)), CLASS=EVRMRMTSBuffer, PARENT=$(EVR), PROP=FlushEvent")
}

record(bo, "$(SYS){$(D)}Flsh-SP") {
    field(DTYP, "Obj Prop command")
    field(OUT , "@OBJ=$(NAME=$(EVR):CPT$(CODE)), CLASS=EVRMRMTSBuffer, PARENT=$(EVR), PROP=FlushManual")
    field(VAL , "$(TRIG=0)")
    field(ZNAM, "Flush")
    field(ONAM, "Flush")
}

record(longin, "$(SYS){$(D)}Drop-I") {
    field(DTYP, "Obj Prop uint32")
    field(SCAN, "10 second")
    field(INP , "@OBJ=$(NAME=$(EVR):CPT$(CODE)), CLASS=EVRMRMTSBuffer, PARENT=$(EVR), PROP=DropCnt")
    field(FLNK, "$(SYS){$(D)}DropRate-I")
}

record(calc, "$(SYS){$(D)}DropRate-I") {
    field(INPA, "$(SYS){$(D)}Drop-I NPP")
    field(CALC, "C:=A-B;B:=A;C/10")
}
